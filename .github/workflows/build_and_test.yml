---
name: build and test

on:
  schedule:
    - cron: '0 6 * * *'
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:
  workflow_dispatch:

env:
  PERL_CPANM_OPT: "--quiet --notest"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Extract author information
        run: |
          echo AUTHOR_NAME="$(git log -1 ${GITHUB_REF} --pretty='%aN')" >> $GITHUB_ENV
          echo AUTHOR_EMAIL="$(git log -1 ${GITHUB_REF} --pretty='%aE')" >> $GITHUB_ENV
      - name: Setup Perl
        uses: shogo82148/actions-setup-perl@v1
      - name: Setup Perl environment
        run: |
          echo PERL_VERSION="$(perl -E 'print $^V')" >> $GITHUB_ENV
          echo BUILD_TIMESTAMP="$(date +%FT%T)" >> $GITHUB_ENV
      - name: Get operating system version
        run: echo OS_VERSION="$(lsb_release -sr)" >> $GITHUB_ENV
      - name: Cache build modules
        uses: actions/cache@v3
        with:
          path: local
          key: cache-build-modules-${{ env.OS_VERSION }}-${{ env.PERL_VERSION }}-${{ env.BUILD_TIMESTAMP }}
          restore-keys: cache-build-modules-${{ env.OS_VERSION }}-${{ env.PERL_VERSION }}-
      - name: Install Dist::Zilla
        run: cpanm --local-lib ${GITHUB_WORKSPACE}/local Dist::Zilla
      - name: Configure Dist::Zilla
        run: |
          mkdir ~/.dzil
          echo "[%User]" > ~/.dzil/config.ini
          echo "name = ${AUTHOR_NAME}" >> ~/.dzil/config.ini
          echo "email = ${AUTHOR_EMAIL}" >> ~/.dzil/config.ini
          cat ~/.dzil/config.ini
      - name: Install author dependencies
        run: dzil authordeps | cpanm --local-lib ${GITHUB_WORKSPACE}/local
      - name: Build dist
        run: dzil build --no-tgz --in build
      - name: Upload build results
        uses: actions/upload-artifact@v3
        with:
          name: build_results
          path: build

  coverage:
    if: ${{ github.event_name != 'schedule' }}

    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Download build results
        uses: actions/download-artifact@v3
        with:
          name: build_results
          path: build
      - name: Setup Perl
        id: perl
        uses: shogo82148/actions-setup-perl@v1
      - name: Get build timestamp
        run: echo BUILD_TIMESTAMP="$(date +%FT%T)" >> $GITHUB_ENV
      - name: Cache coverage dependencies
        uses: actions/cache@v3
        with:
          path: local
          key: cache-coverage-deps-${{ steps.perl.outputs.perl-hash }}-${{ env.BUILD_TIMESTAMP }}
          restore-keys: cache-coverage-deps-${{ steps.perl.outputs.perl-hash }}-
      - name: Install dependencies
        run: |
          cd build
          cpanm --local-lib ${GITHUB_WORKSPACE}/local --installdeps --with-develop --with-all-features --with-suggests .
      - name: Install coverage dependencies
        run: |
          cd build
          cpanm --local-lib ${GITHUB_WORKSPACE}/local Devel::Cover::Report::Coveralls Pod::Coverage::CountParents
      - name: Run tests with coverage
        env:
          HARNESS_PERL_SWITCHES: -MDevel::Cover=+ignore,^t/
        run: |
          cd build
          prove --timer --lib --recurse --jobs $(nproc) --shuffle t/
      - name: Report coverage info to Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd build
          cover -report coveralls

  extra-tests:
    needs: build

    runs-on: ubuntu-latest

    env:
      AUTHOR_TESTING: 1
      EXTENDED_TESTING: 1
      RELEASE_TESTING: 1

    steps:
      - name: Download build results
        uses: actions/download-artifact@v3
        with:
          name: build_results
      - name: Install packages
        run: sudo apt-get install -y aspell
      - name: Setup Perl
        id: perl
        uses: shogo82148/actions-setup-perl@v1
      - name: Get build timestamp
        run: echo BUILD_TIMESTAMP="$(date +%FT%T)" >> $GITHUB_ENV
      - name: Cache extra-tests dependencies
        uses: actions/cache@v3
        with:
          path: local
          key: cache-extra-tests-deps-${{ steps.perl.outputs.perl-hash }}-${{ env.BUILD_TIMESTAMP }}
          restore-keys: cache-extra-tests-deps-${{ steps.perl.outputs.perl-hash }}-
      - name: Install dependencies
        run: cpanm --local-lib ${GITHUB_WORKSPACE}/local --installdeps --with-develop .
      - name: Cache perlcritic history
        uses: actions/cache@v3
        with:
          path: /tmp/cache/.perlcritic-history
          key: cache-perlcritic-history-${{ env.BUILD_TIMESTAMP }}
          restore-keys: cache-perlcritic-history-
      - name: Run extra tests
        run: prove --timer --lib --recurse --jobs $(nproc) --shuffle xt/

  tests:
    needs: build

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu
          - macos
        perl:
          - '5.10'
          - latest
        distribution:
          - default
        cpanm_args:
          - --with-all-features
        include:
          - os: windows
            perl: latest
            distribution: strawberry
            cpanm_args: --with-all-features --without-feature=custom_output --without-feature=rsync

    runs-on: ${{ matrix.os }}-latest

    steps:
      - name: Download build results
        uses: actions/download-artifact@v3
        with:
          name: build_results
      - name: Setup Perl
        id: perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: ${{ matrix.perl }}
          distribution: ${{ matrix.distribution }}
      - name: Install dependencies
        run: cpanm --installdeps ${{ matrix.cpanm_args }} .
      - name: Get number of processors
        id: cores
        uses: SimenB/github-actions-cpu-cores@v1
      - name: Run tests
        run: prove --timer --lib --recurse --jobs ${{ steps.cores.outputs.count }} --shuffle t/
